// <auto-generated />
using System;
using C9_CostManager.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace C9_CostManager.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211206011925_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("C9_CostManager.Models.CostModel", b =>
                {
                    b.Property<int>("CostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CostId"), 1L, 1);

                    b.Property<decimal>("CostAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.HasKey("CostId");

                    b.ToTable("Costs");
                });

            modelBuilder.Entity("C9_CostManager.Models.TripMemberModel", b =>
                {
                    b.Property<int>("TripMemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TripMemberId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<int>("TripId")
                        .HasColumnType("int");

                    b.Property<int>("TripModelTripId")
                        .HasColumnType("int");

                    b.HasKey("TripMemberId");

                    b.HasIndex("TripModelTripId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("C9_CostManager.Models.TripModel", b =>
                {
                    b.Property<int>("TripId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TripId"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TripName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TripPasscode")
                        .HasColumnType("int");

                    b.Property<bool>("TripStatusComplete")
                        .HasColumnType("bit");

                    b.HasKey("TripId");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("CostModelTripMemberModel", b =>
                {
                    b.Property<int>("CostsCostId")
                        .HasColumnType("int");

                    b.Property<int>("TripMembersTripMemberId")
                        .HasColumnType("int");

                    b.HasKey("CostsCostId", "TripMembersTripMemberId");

                    b.HasIndex("TripMembersTripMemberId");

                    b.ToTable("CostModelTripMemberModel");
                });

            modelBuilder.Entity("C9_CostManager.Models.TripMemberModel", b =>
                {
                    b.HasOne("C9_CostManager.Models.TripModel", "TripModel")
                        .WithMany("TripMembers")
                        .HasForeignKey("TripModelTripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TripModel");
                });

            modelBuilder.Entity("CostModelTripMemberModel", b =>
                {
                    b.HasOne("C9_CostManager.Models.CostModel", null)
                        .WithMany()
                        .HasForeignKey("CostsCostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("C9_CostManager.Models.TripMemberModel", null)
                        .WithMany()
                        .HasForeignKey("TripMembersTripMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("C9_CostManager.Models.TripModel", b =>
                {
                    b.Navigation("TripMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
